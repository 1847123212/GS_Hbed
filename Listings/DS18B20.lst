C51 COMPILER V9.60.0.0   DS18B20                                                           06/15/2021 02:48:44 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\Objects\DS18B20.obj
COMPILER INVOKED BY: D:\Development\Keil_v5\C51\BIN\C51.EXE Application\DS18B20\DS18B20.c OMF2 OPTIMIZE(8,SPEED) BROWSE 
                    -INCDIR(.\Application\Button;.\Application\DS18B20;.\Application\LCD1602;.\Application\SYS;.\Application\UART;.\Applicati
                    -on) DEBUG PRINT(.\Listings\DS18B20.lst) TABS(2) OBJECT(.\Objects\DS18B20.obj)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          #include "DS18B20.h"
   4          #include "Sys.h"//自定义延时函数，uint8和uint16
   5          /***************************************************
   6          *               DS18B20复位子函数
   7          *            总线拉低550us，释放66us
   8          ****************************************************/
   9          void ds18b20_reset(void)
  10          {
  11   1        bit flag=1;
  12   1        while (flag)        //判断初始化是否成功
  13   1        {
  14   2          while (flag)      //判断DS18B20是否给出反馈
  15   2          {
  16   3            DQ = 1;
  17   3            delay_11us(1);  //高电平约11us
  18   3            DQ = 0;
  19   3            delay_11us(50); //低电平550us
  20   3            DQ = 1; 
  21   3            delay_11us(6);  //释放66us
  22   3            flag = DQ;      //总线状态采样
  23   3          }
  24   2          delay_11us(50);   //延时550us
  25   2          flag = ~DQ;       //总线状态采样
  26   2        }
  27   1        DQ=1;
  28   1      }
  29          /***************************************************
  30          *             向总线写入一个字节
  31          ****************************************************/
  32          void write_byte(uint8 val)
  33          {
  34   1        uint8 i;
  35   1        for (i=0; i<8; i++)
  36   1        {
  37   2          DQ = 1;               //写时隙准备工作
  38   2          _nop_();
  39   2          DQ = 0;               //告诉DS18B20，准备采样
  40   2          nops();               //4us
  41   2          DQ = val & 0x01;      //最低位移出
  42   2          delay_11us(6);        //66us
  43   2          val >>= 1;            //右移一位
  44   2        }
  45   1        DQ = 1;
  46   1        delay_11us(1);  
  47   1      }
  48          /***************************************************
  49          *               从总线读出一个字节
  50          ****************************************************/
  51          uint8 read_byte(void)
  52          {
  53   1        uint8 i, value=0;
C51 COMPILER V9.60.0.0   DS18B20                                                           06/15/2021 02:48:44 PAGE 2   

  54   1        for (i=0; i<8; i++)
  55   1        {
  56   2          DQ=1;               //读时隙准备工作
  57   2          _nop_();
  58   2          value >>= 1;
  59   2          DQ = 0;             //告诉DS18B20，准备发送
  60   2          nops();             //4us
  61   2          DQ = 1;             //释放总线
  62   2          nops();             //4us 
  63   2          if (DQ)             //0和1的判断
  64   2            value|=0x80;
  65   2          delay_11us(6);           //66us
  66   2        }
  67   1        DQ=1;
  68   1        return(value);        //返回采集到的数据
  69   1      }
  70          /***************************************************
  71          *               温度转换子函数
  72          *           根据操作顺序，发出转换命令
  73          ****************************************************/
  74          void start_convert(void)
  75          {
  76   1        ds18b20_reset();
  77   1        write_byte(0xCC);     // 发Skip ROM命令
  78   1        write_byte(0x44);     // 发转换命令
  79   1      }
  80          /***************************************************
  81          *               温度读取子函数
  82          *           根据操作顺序，读取温度值
  83          ****************************************************/
  84          uint16 read_temp(void)
  85          {
  86   1        uint8 temp_data[2];       // 读出温度暂放
  87   1        uint16 temp;
  88   1      
  89   1        ds18b20_reset();          // 复位
  90   1        write_byte(0xCC);         // 发Skip ROM命令
  91   1        write_byte(0xBE);         // 发读命令
  92   1        temp_data[0]=read_byte();  //温度低8位
  93   1        temp_data[1]=read_byte();  //温度高8位
  94   1        temp = temp_data[1];
  95   1        temp <<= 8;
  96   1        temp |= temp_data[0];
  97   1        return temp;
  98   1      }
  99          float Get_T(void)
 100          {
 101   1        float T;
 102   1        uint16 Tem;
 103   1        start_convert();//开始采集温度数据
 104   1        //delay_ms(100);
 105   1        Tem = read_temp();
 106   1        if(Tem>60000)//温度为负
 107   1        {
 108   2          Tem = ~Tem;
 109   2          Tem++;
 110   2          T = -(Tem*0.0625);
 111   2          return T;
 112   2        }
 113   1        else
 114   1        {T = Tem*0.0625;return T;}
 115   1      }
C51 COMPILER V9.60.0.0   DS18B20                                                           06/15/2021 02:48:44 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    303    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
